#include <stdio.h>
#include <string.h>


long digitSum(const char *n) {
    long sum = 0;
    for (int i = 0; n[i] != '\0'; i++) {
        sum += n[i] - '0';
    }
    return sum;
}


int superDigitHelper(long num) {
    if (num < 10) {
        return (int)num; 
    }

    long sum = 0;
    while (num > 0) {
        sum += num % 10;
        num /= 10;
    }

    return superDigitHelper(sum);
}

int superDigit(char n[], int k) {
    long initialSum = digitSum(n);
    long multiplied = initialSum * k; 
    return superDigitHelper(multiplied);
}

int main() {
    char n[100001]; 
    int k;
    scanf("%s %d", n, &k);

    printf("%d\n", superDigit(n, k));
    return 0;
}
